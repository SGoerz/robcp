// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// kthPair
double kthPair(NumericVector x, NumericVector y, int k);
RcppExport SEXP _robcp_kthPair(SEXP xSEXP, SEXP ySEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(kthPair(x, y, k));
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP cholesky(SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP h_cumsum(SEXP);
RcppExport SEXP h_cumsum_ma(SEXP, SEXP, SEXP);
RcppExport SEXP h_teststat(SEXP, SEXP);
RcppExport SEXP h_teststat_ma(SEXP, SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP lrv(SEXP, SEXP);
RcppExport SEXP lrv_matrix(SEXP, SEXP, SEXP, SEXP);
RcppExport SEXP pKSdist(SEXP, SEXP);
RcppExport SEXP psi(SEXP, SEXP, SEXP, SEXP, SEXP, SEXP, SEXP);

static const R_CallMethodDef CallEntries[] = {
    {"_robcp_kthPair", (DL_FUNC) &_robcp_kthPair, 3},
    {"cholesky",      (DL_FUNC) &cholesky,      5},
    {"h_cumsum",      (DL_FUNC) &h_cumsum,      1},
    {"h_cumsum_ma",   (DL_FUNC) &h_cumsum_ma,   3},
    {"h_teststat",    (DL_FUNC) &h_teststat,    2},
    {"h_teststat_ma", (DL_FUNC) &h_teststat_ma, 5},
    {"lrv",           (DL_FUNC) &lrv,           2},
    {"lrv_matrix",    (DL_FUNC) &lrv_matrix,    4},
    {"pKSdist",       (DL_FUNC) &pKSdist,       2},
    {"psi",           (DL_FUNC) &psi,           7},
    {NULL, NULL, 0}
};

RcppExport void R_init_robcp(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
